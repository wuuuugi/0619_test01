1.객체지향 개념
 -클래스 만드는 것을 자료 설계라 한다.
 -클래스=단위프로그램=모듈=캡슐화
 
class 클래스이름{
	변수
	생성자(){}
	메서드(){}
}	

-클래스는 레퍼런스 자료형이다.
-클래스 사용예
  클래스이름 레퍼런스변수 = new 클래스이름(); // 개체생성(heap영역의 메모리를 할당 받는다.)
  
 클래스이름 레퍼런스변수; //선언
 레퍼런스변수 =new 클래스 이름();
 객체.메서드();
  
 new 클래스이름();//객체생성
 new 클래스이름().매서드();//객체생성. 메서드호출
 
 ex:
 Test01.java :자료설계
 Test01.class : 레퍼런스 자료형 
 Test01 test01 = new Test01();//객체생성
 test01.aa();//객체.메서드()
 
 접근 제한자
 private  : 자신의  클래스 내에서만 접근가능
 생략	      : 같은 패키지 내에서만 접근가능
 protected: 패키지가 다르더라도 상속받으면 사용가능 
 public   : 패키지가 다르고 상속받지않아도 사용가능
 
 객체지향 4대 특성
 1.캡슐화 : 클래스를 묶는것
 2.상속 :  모든 자바 클래스는 상속관계로 이루어져있다. 
 		class Test01 extends Object{}
 		
 3.다형성 :OverLoad (중복) , Overriding(오버라이딩)
 4.추상화 :복잡한것을 단순화 하는 것
 	     복잡한 것: 클래스 만드는 쪽     (자동차를 만드는쪽) 
 	      단순화 : 클래스사용자 입장     (자동차를 사용하는 쪽) 
=======================================
다형성 : 오버로드 ,오버라이딩   
ex:
 점심을 먹다(인수){
 송이 덮밥 먹었다
}
 점심을 먹다(인수,인수){
 도시락을 먹었다 
}
 점심을 먹다(인수,인수,인수){
 유부초밥먹었다
}
===================
강남 가기(){
 전철
}
강남 가기(){
택시
}
강남 가기(){
버스 
}
====================================
  오버로드: 하나의 클래스안에 이름이 같은 메서드가 여러개 있는경우 
  오버로드 메서드는 매개변수 자료형이 다르거나 매개변수갯수가 달라야한다 
  리턴형은 상관 없다. 
 
  오버라이딩 :상속받은 메서드 내용 재정의
  리턴형 메서드이름 매개변수는 반드시 같아야 한다
  단 접근 제한자는 상위와 같거나 더 넓은 것을 사용할 수 있다
  상위 접근 제한자가  protected이면 public도 쓸 수 있다.  
=======================================
constructor 
생성자(생성자 메서드)
1. 생성자 이름은 클래스 이름과 같다
2. 생성자는 리턴형이 없다, 객체 초기화가 목적이다 
3. 생성자 인수를 갖는다. 오버로드가 가능하다
4. 생성자는 객체 생성시 호출된다 
----------------------
5. 생성자를 넣지 않으면 내부적으로 디폴드 생성자 만들어 진다 
6. 인자(매개변수)있는 생성자를 넣으면, 디폴트 생성자는 안 만들어 진다
 그래서 프로그래머가 디폴트 생성자를 넣어야 한다 
 
7. this : 자신을 지칭하는 객체 . 많이사용 
 		ex) this.전역변수 =지역변수
   this() : 자신의 클래스안의 생성자 호출 , 거의 사용 안함 
8. super : 상위(수퍼)클래스 객체를 말함 . 거의 사용안함
   super() : 상위 클래스 생성자 호출. 많이사용
   
9. this() 와 super() 동시에 사용못함 둘다 첫줄에 기재 해야 한다 
 
























 	      
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  





